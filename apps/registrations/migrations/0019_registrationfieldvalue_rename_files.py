# Generated by Django 2.2.24 on 2021-09-17 21:36

from django.db import migrations
import konst.models.fields

def new_file_value_path(obj, filename):
    """ Generate the filename of an uploaded file """
    return 'registration_fields/event_{0}/field_{1}/{2}-{3}'.format(
        obj.registration.event.id, obj.field.id, obj.id, filename)

def forward(apps, schema_editor):
    model = apps.get_model("registrations", "registrationfieldvalue")
    for value in model.objects.select_related('registration').all():
        # Check if the value still conforms to the old pattern, and if so, extract the original filename
        old_prefix = 'registration_fields/event_{0}/field_{1}/'.format(value.registration.event_id, value.id)
        if value.file_value.name.startswith(old_prefix):
            filename = value.file_value.name[len(old_prefix):]
            # Create a new file using the storage API as a copy of the old file
            storage = value.file_value.storage
            old_name = value.file_value.name
            value.file_value.name = storage.save(new_file_value_path(value, filename), value.file_value)
            print(old_name, value.file_value.name)
            value.save()
            # Delete the old file
            storage.delete(old_name)

def reverse(apps, schema_editor):
    model = apps.get_model("registrations", "registrationfieldvalue")
    for value in model.objects.all():
        if value.file_value:
            raise Exception("Cannot reverse file renames")

def file_value_path(obj, filename):
    """ Generate the filename of an uploaded file """
    return 'registration_fields/event_{0}/field_{1}/{2}'.format(obj.registration.event.id, obj.id, filename)


class Migration(migrations.Migration):

    dependencies = [
        ('registrations', '0018_registrationfield_add_text_type')
    ]

    operations = [
        migrations.RunPython(forward, reverse_code=reverse)
    ]
