# Generated by Django 2.2.12 on 2020-04-13 21:17

import apps.core.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import konst
import konst.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', konst.models.fields.ConstantChoiceField(choices=[(0, 'Preparation in progress'), (1, 'Preparation complete'), (2, 'Registered'), (3, 'Waiting list'), (4, 'Cancelled')], verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation timestamp')),
                ('registered_at', models.DateTimeField(blank=True, null=True, verbose_name='Registration timestamp')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'registration',
                'verbose_name_plural': 'registrations',
            },
        ),
        migrations.CreateModel(
            name='RegistrationField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=1)),
                ('title', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=20)),
                ('field_type', models.CharField(choices=[('choice', 'Choice'), ('string', 'String')], max_length=10)),
                ('allow_change_until', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'registration field',
                'verbose_name_plural': 'registration fields',
            },
        ),
        migrations.CreateModel(
            name='RegistrationFieldOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=1)),
                ('title', models.CharField(max_length=100)),
                ('slots', models.IntegerField(blank=True, null=True)),
                ('full', models.BooleanField(default=False)),
                ('price', apps.core.fields.MonetaryField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('depends', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registrations.RegistrationFieldOption')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='registrations.RegistrationField')),
                ('invite_only', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group')),
            ],
            options={
                'verbose_name': 'registration field option',
                'verbose_name_plural': 'registration field options',
                'ordering': ('order', 'title'),
            },
        ),
        migrations.CreateModel(
            name='RegistrationFieldValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string_value', models.CharField(blank=True, max_length=255, null=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registrations.RegistrationField')),
                ('option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='registrations.RegistrationFieldOption')),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='registrations.Registration')),
            ],
            options={
                'verbose_name': 'registration field value',
                'verbose_name_plural': 'registration field values',
            },
        ),
        migrations.AddField(
            model_name='registrationfield',
            name='depends',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registrations.RegistrationFieldOption'),
        ),
        migrations.AddField(
            model_name='registrationfield',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registration_fields', to='events.Event'),
        ),
        migrations.AddField(
            model_name='registrationfield',
            name='invite_only',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group'),
        ),
        migrations.AddIndex(
            model_name='registrationfieldvalue',
            index=models.Index(fields=['option', 'registration'], name='idx_option_registration'),
        ),
        migrations.AddIndex(
            model_name='registrationfieldvalue',
            index=models.Index(fields=['registration', 'option'], name='idx_registration_option'),
        ),
        migrations.AddConstraint(
            model_name='registrationfieldvalue',
            constraint=models.UniqueConstraint(fields=('registration', 'field'), name='one_value_per_field_per_registration'),
        ),
        migrations.AddConstraint(
            model_name='registrationfield',
            constraint=models.UniqueConstraint(fields=('event', 'name'), name='unique_name_for_event'),
        ),
        migrations.AddIndex(
            model_name='registration',
            index=models.Index(fields=['user', 'event', 'status', 'created_at'], name='idx_user_event_status_created'),
        ),
        migrations.AddConstraint(
            model_name='registration',
            constraint=models.UniqueConstraint(condition=models.Q(status__in={konst.Constant(PREPARATION_IN_PROGRESS=0, label='Preparation in progress'), konst.Constant(PREPARATION_COMPLETE=1, label='Preparation complete'), konst.Constant(REGISTERED=2, label='Registered'), konst.Constant(WAITINGLIST=3, label='Waiting list')}), fields=('event', 'user'), name='one_current_registration_per_user_per_event'),
        ),
        migrations.AddConstraint(
            model_name='registration',
            constraint=models.CheckConstraint(check=models.Q(models.Q(_negated=True, status__in={konst.Constant(REGISTERED=2, label='Registered'), konst.Constant(WAITINGLIST=3, label='Waiting list')}), ('registered_at__isnull', False), _connector='OR'), name='active_registration_has_timestamp'),
        ),
    ]
